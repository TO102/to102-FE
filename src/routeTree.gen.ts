/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as ReviewpageImport } from './routes/reviewpage'
import { Route as NewsImport } from './routes/news'
import { Route as LoginImport } from './routes/login'
import { Route as ChatImport } from './routes/chat'
import { Route as IndexImport } from './routes/index'
import { Route as ProfileprofileIdImport } from './routes/profile/$userId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const ReviewpageRoute = ReviewpageImport.update({
  path: '/reviewpage',
  getParentRoute: () => rootRoute,
} as any)

const NewsRoute = NewsImport.update({
  path: '/news',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ChatRoute = ChatImport.update({
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProfileprofileIdRoute = ProfileprofileIdImport.update({
  path: '/profile/${profileId}',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/news': {
      id: '/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsImport
      parentRoute: typeof rootRoute
    }
    '/reviewpage': {
      id: '/reviewpage'
      path: '/reviewpage'
      fullPath: '/reviewpage'
      preLoaderRoute: typeof ReviewpageImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/profile/${profileId}': {
      id: '/profile/${profileId}'
      path: '/profile/${profileId}'
      fullPath: '/profile/${profileId}'
      preLoaderRoute: typeof ProfileprofileIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ChatRoute,
  LoginRoute,
  NewsRoute,
  ReviewpageRoute,
  SignupRoute,
  ProfileprofileIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/chat",
        "/login",
        "/news",
        "/reviewpage",
        "/signup",
        "/profile/${profileId}"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/chat": {
      "filePath": "chat.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/news": {
      "filePath": "news.tsx"
    },
    "/reviewpage": {
      "filePath": "reviewpage.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/profile/${profileId}": {
      "filePath": "profile/${profileId}.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
