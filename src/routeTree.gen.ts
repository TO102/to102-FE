/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as ReviewsImport } from "./routes/reviews";
import { Route as LoginImport } from "./routes/login";
import { Route as ChatImport } from "./routes/chat";
import { Route as IndexImport } from "./routes/index";
import { Route as ProfileUserIdImport } from "./routes/profile/$userId";
import { Route as PostPostlistImport } from "./routes/post/postlist";
import { Route as PostCreatePostImport } from "./routes/post/CreatePost";
import { Route as MypageMypostsImport } from "./routes/mypage/myposts";
import { Route as MypageMypageImport } from "./routes/mypage/mypage";
import { Route as MypageMyfriendsImport } from "./routes/mypage/myfriends";
import { Route as MypageVerifyLocationImport } from "./routes/mypage/VerifyLocation";
import { Route as MypageNotificationSettingsImport } from "./routes/mypage/NotificationSettings";
import { Route as AuthKakaoCallbackImport } from "./routes/auth/kakao/callback";
import { Route as ChatChatRoomIdImport } from "./routes/chat/$chatRoomId";

// Create/Update Routes

const RoomsRoute = RoomsImport.update({
  path: "/rooms",
  getParentRoute: () => rootRoute,
} as any);

const ReviewsRoute = ReviewsImport.update({
  path: "/reviews",
  getParentRoute: () => rootRoute,
} as any);

const LoginRoute = LoginImport.update({
  path: "/login",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const ProfileUserIdRoute = ProfileUserIdImport.update({
  path: "/profile/$userId",
  getParentRoute: () => rootRoute,
} as any);

const PostPostsRoute = PostPostsImport.update({
  path: "/post/posts",
  getParentRoute: () => rootRoute,
} as any);

const PostPostDetailRoute = PostPostDetailImport.update({
  path: "/post/PostDetail",
  getParentRoute: () => rootRoute,
} as any);

const PostEditPostRoute = PostEditPostImport.update({
  path: "/post/EditPost",
  getParentRoute: () => rootRoute,
} as any);

const PostCreatePostRoute = PostCreatePostImport.update({
  path: "/post/CreatePost",
  getParentRoute: () => rootRoute,
} as any);

const MypageMypostsRoute = MypageMypostsImport.update({
  path: "/mypage/myposts",
  getParentRoute: () => rootRoute,
} as any);

const MypageMypageRoute = MypageMypageImport.update({
  path: "/mypage/mypage",
  getParentRoute: () => rootRoute,
} as any);

const MypageMyfriendsRoute = MypageMyfriendsImport.update({
  path: "/mypage/myfriends",
  getParentRoute: () => rootRoute,
} as any);

const MypageVerifyLocationRoute = MypageVerifyLocationImport.update({
  path: "/mypage/VerifyLocation",
  getParentRoute: () => rootRoute,
} as any);

const MypageNotificationSettingsRoute = MypageNotificationSettingsImport.update(
  {
    path: "/mypage/NotificationSettings",
    getParentRoute: () => rootRoute,
  } as any
);

const AuthKakaoCallbackRoute = AuthKakaoCallbackImport.update({
  path: "/auth/kakao/callback",
  getParentRoute: () => rootRoute,
} as any);

const ChatChatRoomIdRoute = ChatChatRoomIdImport.update({
  path: "/chat/$chatRoomId",
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/login": {
      id: "/login";
      path: "/login";
      fullPath: "/login";
      preLoaderRoute: typeof LoginImport;
      parentRoute: typeof rootRoute;
    };
    "/reviews": {
      id: "/reviews";
      path: "/reviews";
      fullPath: "/reviews";
      preLoaderRoute: typeof ReviewsImport;
      parentRoute: typeof rootRoute;
    };
    "/post/CreatePost": {
      id: "/post/CreatePost";
      path: "/post/CreatePost";
      fullPath: "/post/CreatePost";
      preLoaderRoute: typeof PostCreatePostImport;
      parentRoute: typeof rootRoute;
    };
    "/post/EditPost": {
      id: "/post/EditPost";
      path: "/post/EditPost";
      fullPath: "/post/EditPost";
      preLoaderRoute: typeof PostEditPostImport;
      parentRoute: typeof rootRoute;
    };
    "/post/PostDetail": {
      id: "/post/PostDetail";
      path: "/post/PostDetail";
      fullPath: "/post/PostDetail";
      preLoaderRoute: typeof PostPostDetailImport;
      parentRoute: typeof rootRoute;
    };
    "/post/posts": {
      id: "/post/posts";
      path: "/post/posts";
      fullPath: "/post/posts";
      preLoaderRoute: typeof PostPostsImport;
      parentRoute: typeof rootRoute;
    };
    "/profile/$userId": {
      id: "/profile/$userId";
      path: "/profile/$userId";
      fullPath: "/profile/$userId";
      preLoaderRoute: typeof ProfileUserIdImport;
      parentRoute: typeof rootRoute;
    };
    "/auth/kakao/callback": {
      id: "/auth/kakao/callback";
      path: "/auth/kakao/callback";
      fullPath: "/auth/kakao/callback";
      preLoaderRoute: typeof AuthKakaoCallbackImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LoginRoute,
  ReviewsRoute,
  MypageNotificationSettingsRoute,
  MypageVerifyLocationRoute,
  MypageMyfriendsRoute,
  MypageMypageRoute,
  MypageMypostsRoute,
  PostCreatePostRoute,
  PostEditPostRoute,
  PostPostDetailRoute,
  PostPostsRoute,
  ProfileUserIdRoute,
  AuthKakaoCallbackRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/reviews",
        "/mypage/NotificationSettings",
        "/mypage/VerifyLocation",
        "/mypage/myfriends",
        "/mypage/mypage",
        "/mypage/myposts",
        "/post/CreatePost",
        "/post/EditPost",
        "/post/PostDetail",
        "/post/posts",
        "/profile/$userId",
        "/auth/kakao/callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/reviews": {
      "filePath": "reviews.tsx"
    },
    "/mypage/NotificationSettings": {
      "filePath": "mypage/NotificationSettings.tsx"
    },
    "/mypage/VerifyLocation": {
      "filePath": "mypage/VerifyLocation.tsx"
    },
    "/mypage/myfriends": {
      "filePath": "mypage/myfriends.tsx"
    },
    "/mypage/mypage": {
      "filePath": "mypage/mypage.tsx"
    },
    "/mypage/myposts": {
      "filePath": "mypage/myposts.tsx"
    },
    "/post/CreatePost": {
      "filePath": "post/CreatePost.tsx"
    },
    "/post/EditPost": {
      "filePath": "post/EditPost.tsx"
    },
    "/post/PostDetail": {
      "filePath": "post/PostDetail.tsx"
    },
    "/post/posts": {
      "filePath": "post/posts.tsx"
    },
    "/profile/$userId": {
      "filePath": "profile/$userId.tsx"
    },
    "/auth/kakao/callback": {
      "filePath": "auth/kakao/callback.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
